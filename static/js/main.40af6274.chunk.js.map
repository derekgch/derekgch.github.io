{"version":3,"sources":["images/Santorini.jpg","components/NavBar.js","components/Home.js","components/Projects.js","components/Contact.js","components/About.js","components/Gallery.js","components/Container.js","MainContainer.js","App.js","serviceWorker.js","index.js","images/derekchen.jpg"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","style","background","color","Toolbar_default","onClick","event","target","tagName","menu","innerText","toLowerCase","trim","handleMenuClick","Typography_default","variant","Button_default","Home","id","Component","Projects","Contact","About","src","selfImage","width","Gallery","Container","selectPage","components_Home","components_Projects","components_Contact","components_About","components_Gallery","this","MainContainer","state","showMenu","scrollPos","handleScroll","_debounce","supportPageOffset","undefined","window","pageXOffset","isCSS1Compat","document","compatMode","scroll","x","documentElement","scrollLeft","body","y","pageYOffset","scrollTop","_this","setState","addEventListener","removeEventListener","navbarClassName","NavBar","components_Container","App","title","src_MainContainer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mPC4DzBC,2BAnDA,CACbC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,WAAY,CACVC,YAAa,GACbC,YAAa,KA0CFN,CAtCf,SAAsBO,GAAO,IACnBC,EAAYD,EAAZC,QAWR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MACtBQ,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAASI,MAAO,CAACC,WAAW,UAAWC,MAAM,UAC3CP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAASQ,QAZK,SAACC,GAEnB,GAA4B,WAAzBA,EAAMC,OAAOC,SAAiD,SAAzBF,EAAMC,OAAOC,QAAmB,CACpE,IAAIC,EAAOH,EAAMC,OAAOG,UAAUC,cAAcC,OAEhDlB,EAAMmB,gBAAgBJ,MAWpBb,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,QAAQ,KAAKZ,MAAM,UAAUJ,UAAWJ,EAAQL,MAC1DM,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQM,MAAM,WAAd,QACAP,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQM,MAAM,WAAd,YAEAP,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQM,MAAM,WAAd,eCzBGc,2LAfP,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQmB,GAAG,QAEtBtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,+CAPGqB,cCSJC,mLARP,OACIxB,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,OAAOnB,UAAU,SAAzB,mBAHWoB,aCURE,mLARP,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQmB,GAAG,QAA1B,mBAHUC,8BCePG,mLAZP,OACI1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQmB,GAAG,QACtBtB,EAAAC,EAAAC,cAAA,OAAKyB,IAAKC,IAAWzB,UAAU,aAAa0B,MAAM,QAClD7B,EAAAC,EAAAC,cAAA,WAFJ,WAIIF,EAAAC,EAAAC,cAAA,udAPIqB,aCSLO,mLARP,OACI9B,EAAAC,EAAAC,cAAA,8BAHUqB,aCqCPQ,6MA/BXC,WAAa,SAACnB,GAEV,OAAQA,GACJ,IAAK,OACD,OAAOb,EAAAC,EAAAC,cAAC+B,EAAD,MAEX,IAAK,WACD,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAGX,IAAK,UACD,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAEX,IAAK,QACD,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAEX,IAAK,UACD,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,gFAMf,OACIrC,EAAAC,EAAAC,cAAA,WACKoC,KAAKN,WAAWM,KAAKxC,MAAMe,cA1BpBU,8BCoDTgB,6MApDXC,MAAO,CACH3B,KAAM,OACN4B,UAAS,EACTC,UAAU,KAWdC,aAAaC,IAAU,SAAClC,GAEpB,IAAImC,OAA2CC,IAAvBC,OAAOC,YAC3BC,EAAgD,gBAA/BC,SAASC,YAAc,IACxCC,EAAS,CACVC,EAAGR,EAAoBE,OAAOC,YAAcC,EAAeC,SAASI,gBAAgBC,WAAaL,SAASM,KAAKD,WAC/GE,EAAGZ,EAAoBE,OAAOW,YAAcT,EAAeC,SAASI,gBAAgBK,UAAYT,SAASM,KAAKG,WAG9GP,EAAOK,EAAIG,EAAKpB,MAAME,UACrBkB,EAAKC,SAAS,CAACpB,UAAS,EAAOC,UAAUU,EAAOK,IAEhDG,EAAKC,SAAS,CAACpB,UAAS,EAAMC,UAAUU,EAAOK,KAMpD,OAEHxC,gBAAkB,SAACJ,GACf+C,EAAKC,SAAS,CAAChD,6FA7BfkC,OAAOe,iBAAiB,SAAUxB,KAAKK,6DAKvCI,OAAOgB,oBAAoB,SAAUzB,KAAKK,+CA4B1C,IAAMqB,EAAkB1B,KAAKE,MAAMC,SAAU,iBAAmB,eAChE,OACIzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAW6D,GACZhE,EAAAC,EAAAC,cAAC+D,EAAD,CAAQhD,gBAAiBqB,KAAKrB,mBAElCjB,EAAAC,EAAAC,cAACgE,EAAD,CAAWrD,KAAMyB,KAAKE,MAAM3B,eA9ChBU,aCWb4C,8LAXXjB,SAASkB,MAAQ,oDAGjB,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAEmE,EAAF,cAPU9C,aCQE+C,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAAS1B,SAAS2B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBhG,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.40af6274.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Santorini.988d73a8.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n\n  const handleClick = (event) =>{\n      // console.log(event.target.id)\n    if(event.target.tagName === \"BUTTON\" || event.target.tagName === \"SPAN\"){\n        let menu = event.target.innerText.toLowerCase().trim();\n        // console.log(menu);\n        props.handleMenuClick(menu);\n    }\n  }\n  //#42a5f5 position=\"static\",boxShadow: 'none'\n  return (\n    <div className={classes.root}>\n      <AppBar  style={{background:\"#42a5f5\", color:\"white\"}}>\n        <Toolbar onClick={handleClick}>\n          {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            \n          </IconButton> */}\n          <Typography variant=\"h4\" color=\"inherit\" className={classes.grow} >\n            <Button color=\"inherit\" >Home</Button>\n            <Button color=\"inherit\" >Projects</Button>\n            {/* <Button color=\"inherit\" >Gallery</Button> */}\n            <Button color=\"inherit\" >About</Button>\n            {/* <Button color=\"inherit\" >Contact</Button> */}\n\n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React, { Component } from 'react';\nimport Background from '../images/Santorini.jpg';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className='front' id=\"home\">\n                {/* <img src={Background} className=\"background-home\" width=\"auto\"/> */}\n                <div className=\"name-title\">\n                <h1 >Derek Guo Chen</h1>\n                <h2 >Full Stack Web Developer</h2>\n                </div>\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div id=\"home\" className=\"front\">\n                Projects\n            </div>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div className=\"front\" id=\"home\">\n                Contacts\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport selfImage from '../images/derekchen.jpg';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"front\" id=\"home\">\n                <img src={selfImage} className=\"self-image\" width=\"20%\"/>\n                <br></br>\n                About me\n                <p>Full stack web developer with a passion for being a part of the technology revolution.  With experience in Ruby on Rails, JavaScript, and React and a background in electrical and computer engineering, I discovered programing through hacking computer games and programming Ti-83 calculators as a teenager.  I bring strong skills in project management and analytical problem solving that help teams deliver in todayâ€™s fast-paced deployment cycles.</p>\n\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Gallery extends Component {\n    render() {\n        return (\n            <div>\n                Gallery;\n            </div>\n        );\n    }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport Home from './Home';\nimport Projects from './Projects';\nimport Contact from './Contact';\nimport About from './About';\nimport Gallery from './Gallery';\n\nclass Container extends Component {\n    selectPage = (menu) =>{\n        // console.log(menu)\n        switch (menu) {\n            case \"home\":\n                return <Home />;\n\n            case \"projects\":\n                return <Projects />;\n                \n\n            case \"contact\":\n                return <Contact />;\n\n            case \"about\":\n                return <About />;\n\n            case \"gallery\":\n                return <Gallery />;\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.selectPage(this.props.menu)}\n            </div>\n        );\n    }\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport Container from './components/Container';\nimport _debounce from 'lodash/debounce';\n\n\nclass MainContainer extends Component {\n    state ={\n        menu: \"home\",\n        showMenu:false,\n        scrollPos:0,\n    }\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n                \n    };\n    \n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    };\n    \n    handleScroll=_debounce((event)=> {\n\n        let supportPageOffset = window.pageXOffset !== undefined;\n        let isCSS1Compat = ((document.compatMode || '') === 'CSS1Compat');\n        let scroll = {\n           x: supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft,\n           y: supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop\n        };\n\n        if(scroll.y > this.state.scrollPos){            \n            this.setState({showMenu:false, scrollPos:scroll.y});\n        }else{\n            this.setState({showMenu:true, scrollPos:scroll.y});\n        }\n\n\n        \n        // console.log('the scroll things', event, scroll)\n    }, 600)\n\n    handleMenuClick = (menu) =>{\n        this.setState({menu})\n    }\n   \n    render() {\n        const navbarClassName = this.state.showMenu? \"nav ScrollDown\" : \"nav ScrollUp\";\n        return (\n            <div >\n                <nav className={navbarClassName} >\n                    <NavBar handleMenuClick={this.handleMenuClick} />\n                </nav>\n                <Container menu={this.state.menu}/>\n                \n            </div>\n        );\n    }\n}\n\nexport default MainContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport MainContainer from './MainContainer';\n\nclass App extends Component {\n  componentDidMount(){\n    document.title = \"Derek's Homepage\"\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        < MainContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/derekchen.6e7ddb1c.jpg\";"],"sourceRoot":""}